// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 16.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace CodedUITestProject1
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WpfControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "16.0.29514.35")]
    public partial class UIMap
    {
        
        /// <summary>
        /// AssertMethod1
        /// </summary>
        public void AssertMethod1()
        {
            #region Variable Declarations
            WpfButton uIStartScrapingButton = this.UIScraperBrowserWindow.UIMainFramePane.UIStartScrapingButton;
            #endregion

            // Verify that the 'ControlType' property of 'Start Scraping' button is not equal to 'null'
            Assert.IsNotNull(uIStartScrapingButton.ControlType);
        }
        
        /// <summary>
        /// AssertMethod2 - Use 'AssertMethod2ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertMethod2()
        {
            #region Variable Declarations
            WpfImage uIPART_imageImage = this.UIScraperBrowserWindow.UIMainFramePane.UIBrowserUserControlCustom.UIPART_imageImage;
            #endregion

            // Verify that the 'ControlType' property of 'PART_image' image equals 'Image'
            Assert.AreEqual(this.AssertMethod2ExpectedValues.UIPART_imageImageControlType, uIPART_imageImage.ControlType.ToString());
        }
        
        /// <summary>
        /// AssertMethod3 - Use 'AssertMethod3ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertMethod3()
        {
            #region Variable Declarations
            WpfButton uIYesButton = this.UIScraperBrowserWindow.UIMainFramePane.UIYesButton;
            #endregion

            // Verify that the 'ControlType' property of 'Yes' button equals 'Button'
            Assert.AreEqual(this.AssertMethod3ExpectedValues.UIYesButtonControlType, uIYesButton.ControlType.ToString());
        }
        
        #region Properties
        public virtual AssertMethod2ExpectedValues AssertMethod2ExpectedValues
        {
            get
            {
                if ((this.mAssertMethod2ExpectedValues == null))
                {
                    this.mAssertMethod2ExpectedValues = new AssertMethod2ExpectedValues();
                }
                return this.mAssertMethod2ExpectedValues;
            }
        }
        
        public virtual AssertMethod3ExpectedValues AssertMethod3ExpectedValues
        {
            get
            {
                if ((this.mAssertMethod3ExpectedValues == null))
                {
                    this.mAssertMethod3ExpectedValues = new AssertMethod3ExpectedValues();
                }
                return this.mAssertMethod3ExpectedValues;
            }
        }
        
        public UIScraperBrowserWindow UIScraperBrowserWindow
        {
            get
            {
                if ((this.mUIScraperBrowserWindow == null))
                {
                    this.mUIScraperBrowserWindow = new UIScraperBrowserWindow();
                }
                return this.mUIScraperBrowserWindow;
            }
        }
        #endregion
        
        #region Fields
        private AssertMethod2ExpectedValues mAssertMethod2ExpectedValues;
        
        private AssertMethod3ExpectedValues mAssertMethod3ExpectedValues;
        
        private UIScraperBrowserWindow mUIScraperBrowserWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertMethod2'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "16.0.29514.35")]
    public class AssertMethod2ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ControlType' property of 'PART_image' image equals 'Image'
        /// </summary>
        public string UIPART_imageImageControlType = "Image";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertMethod3'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "16.0.29514.35")]
    public class AssertMethod3ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ControlType' property of 'Yes' button equals 'Button'
        /// </summary>
        public string UIYesButtonControlType = "Button";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.29514.35")]
    public class UIScraperBrowserWindow : WpfWindow
    {
        
        public UIScraperBrowserWindow()
        {
            #region Search Criteria
            this.SearchProperties[WpfWindow.PropertyNames.Name] = "Scraper Browser";
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Scraper Browser");
            #endregion
        }
        
        #region Properties
        public UIMainFramePane UIMainFramePane
        {
            get
            {
                if ((this.mUIMainFramePane == null))
                {
                    this.mUIMainFramePane = new UIMainFramePane(this);
                }
                return this.mUIMainFramePane;
            }
        }
        #endregion
        
        #region Fields
        private UIMainFramePane mUIMainFramePane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.29514.35")]
    public class UIMainFramePane : WpfPane
    {
        
        public UIMainFramePane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.Frame";
            this.SearchProperties[WpfPane.PropertyNames.AutomationId] = "mainFrame";
            this.WindowTitles.Add("Scraper Browser");
            #endregion
        }
        
        #region Properties
        public WpfButton UIStartScrapingButton
        {
            get
            {
                if ((this.mUIStartScrapingButton == null))
                {
                    this.mUIStartScrapingButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUIStartScrapingButton.SearchProperties[WpfButton.PropertyNames.Name] = "Start Scraping";
                    this.mUIStartScrapingButton.WindowTitles.Add("Scraper Browser");
                    #endregion
                }
                return this.mUIStartScrapingButton;
            }
        }
        
        public WpfButton UIOpenMenuButtonButton
        {
            get
            {
                if ((this.mUIOpenMenuButtonButton == null))
                {
                    this.mUIOpenMenuButtonButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUIOpenMenuButtonButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "OpenMenuButton";
                    this.mUIOpenMenuButtonButton.WindowTitles.Add("Scraper Browser");
                    #endregion
                }
                return this.mUIOpenMenuButtonButton;
            }
        }
        
        public UICommandListList UICommandListList
        {
            get
            {
                if ((this.mUICommandListList == null))
                {
                    this.mUICommandListList = new UICommandListList(this);
                }
                return this.mUICommandListList;
            }
        }
        
        public UIBrowserUserControlCustom UIBrowserUserControlCustom
        {
            get
            {
                if ((this.mUIBrowserUserControlCustom == null))
                {
                    this.mUIBrowserUserControlCustom = new UIBrowserUserControlCustom(this);
                }
                return this.mUIBrowserUserControlCustom;
            }
        }

        public WpfButton UIYesButton
        {
            get
            {
                if ((this.mUIYesButton == null))
                {
                    this.mUIYesButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUIYesButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "YesButton";
                    this.mUIYesButton.WindowTitles.Add("Scraper Browser");
                    #endregion
                }
                return this.mUIYesButton;
            }
        }
        public WpfButton UIYesButton2
        {
            get
            {
                if ((this.mUIYesButton2 == null))
                {
                    this.mUIYesButton2 = new WpfButton(this);
                    #region Search Criteria
                    this.mUIYesButton2.SearchProperties[WpfButton.PropertyNames.AutomationId] = "YesButton";
                    this.mUIYesButton2.WindowTitles.Add("Scraper Browser");
                    #endregion
                }
                return this.mUIYesButton2;
            }
        }
        #endregion

        #region Fields
        private WpfButton mUIStartScrapingButton;
        
        private WpfButton mUIOpenMenuButtonButton;
        
        private UICommandListList mUICommandListList;
        
        private UIBrowserUserControlCustom mUIBrowserUserControlCustom;

        private WpfButton mUIYesButton;
        private WpfButton mUIYesButton2;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.29514.35")]
    public class UICommandListList : WpfList
    {
        
        public UICommandListList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfList.PropertyNames.AutomationId] = "CommandList";
            this.WindowTitles.Add("Scraper Browser");
            #endregion
        }
        
        #region Properties
        public WpfListItem UIItemListItem
        {
            get
            {
                if ((this.mUIItemListItem == null))
                {
                    this.mUIItemListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mUIItemListItem.WindowTitles.Add("Scraper Browser");
                    #endregion
                }
                return this.mUIItemListItem;
            }
        }
        
        public WpfListItem UIItemListItem1
        {
            get
            {
                if ((this.mUIItemListItem1 == null))
                {
                    this.mUIItemListItem1 = new WpfListItem(this);
                    #region Search Criteria
                    this.mUIItemListItem1.SearchProperties[WpfListItem.PropertyNames.Instance] = "2";
                    this.mUIItemListItem1.WindowTitles.Add("Scraper Browser");
                    #endregion
                }
                return this.mUIItemListItem1;
            }
        }
        
        public WpfListItem UIItemListItem2
        {
            get
            {
                if ((this.mUIItemListItem2 == null))
                {
                    this.mUIItemListItem2 = new WpfListItem(this);
                    #region Search Criteria
                    this.mUIItemListItem2.SearchProperties[WpfListItem.PropertyNames.Instance] = "3";
                    this.mUIItemListItem2.WindowTitles.Add("Scraper Browser");
                    #endregion
                }
                return this.mUIItemListItem2;
            }
        }
        
        public WpfListItem UIItemListItem3
        {
            get
            {
                if ((this.mUIItemListItem3 == null))
                {
                    this.mUIItemListItem3 = new WpfListItem(this);
                    #region Search Criteria
                    this.mUIItemListItem3.SearchProperties[WpfListItem.PropertyNames.Instance] = "4";
                    this.mUIItemListItem3.WindowTitles.Add("Scraper Browser");
                    #endregion
                }
                return this.mUIItemListItem3;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mUIItemListItem;
        
        private WpfListItem mUIItemListItem1;
        
        private WpfListItem mUIItemListItem2;
        
        private WpfListItem mUIItemListItem3;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.29514.35")]
    public class UIBrowserUserControlCustom : WpfCustom
    {
        
        public UIBrowserUserControlCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.BrowserUserControl";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "BrowserUserControl";
            this.WindowTitles.Add("Scraper Browser");
            #endregion
        }
        
        #region Properties
        public WpfImage UIPART_imageImage
        {
            get
            {
                if ((this.mUIPART_imageImage == null))
                {
                    this.mUIPART_imageImage = new WpfImage(this);
                    #region Search Criteria
                    this.mUIPART_imageImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "PART_image";
                    this.mUIPART_imageImage.WindowTitles.Add("Scraper Browser");
                    #endregion
                }
                return this.mUIPART_imageImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfImage mUIPART_imageImage;
        #endregion
    }
}
